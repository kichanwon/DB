--wkc
/*
SELECT e.EMP_NAME, SUM(s.SALARY) AS total_salary

FROM EMPLOYEE e
JOIN SALARY s ON e.EMP_ID = s.EMP_ID
WHERE e.EMP_AGE > 30
GROUP BY e.EMP_NAME
HAVING SUM(s.SALARY) > 50000

ORDER BY total_salary DESC
FETCH FIRST 10 ROWS ONLY;
*/
--1
SELECT td.DEPARTMENT_NAME , td.CATEGORY
FROM TB_DEPARTMENT td;

--2
SELECT td.DEPARTMENT_NAME, '의 정원은'as" ", td.CAPACITY, '입니다'as" "
FROM TB_DEPARTMENT td;

--3
SELECT ts.STUDENT_NAME,td.DEPARTMENT_NAME
FROM TB_STUDENT ts
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME = '국어국문학과'
	AND ts.ABSENCE_YN = 'Y' 
	AND SUBSTR(ts.STUDENT_SSN, 8, 1) = '2' ;


--4 장기연체자
SELECT ts.STUDENT_NAME
FROM TB_STUDENT ts
WHERE ts.STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY ts.STUDENT_NAME DESC ;

--5 정원 20~30
SELECT td.DEPARTMENT_NAME , td.CATEGORY
FROM TB_DEPARTMENT td
WHERE td.CAPACITY BETWEEN 20 AND 30;

--6 총장 찾기
SELECT tp.PROFESSOR_NAME
FROM TB_PROFESSOR tp
WHERE tp.DEPARTMENT_NO IS null;

--7
SELECT ts.STUDENT_NAME, ts.DEPARTMENT_NO
FROM TB_STUDENT ts 
WHERE ts.DEPARTMENT_NO IS null;

--8
SELECT tc.CLASS_NO
FROM TB_CLASS tc 
WHERE tc.PREATTENDING_CLASS_NO IS NOT NULL ;

--9
SELECT DISTINCT td.CATEGORY
FROM TB_DEPARTMENT td ;

--10
SELECT ts.STUDENT_NO, ts.STUDENT_NAME, ts.STUDENT_SSN   , ts.ENTRANCE_DATE,ts.STUDENT_ADDRESS
FROM TB_STUDENT ts
WHERE TO_CHAR(ts.ENTRANCE_DATE, 'YYYY') LIKE '2002'
	AND ts.STUDENT_ADDRESS LIKE '전주%' ;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


--1
SELECT ts.STUDENT_NO AS "학번" , ts.STUDENT_NAME AS "이름" , ts.ENTRANCE_DATE AS "입학년도"
FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME = '영어영문학과'
ORDER BY ts.ENTRANCE_DATE ;

--2																			?
SELECT tp.PROFESSOR_NAME, tp.PROFESSOR_SSN
FROM TB_PROFESSOR tp
WHERE tp.PROFESSOR_NAME NOT LIKE '___' ;

--3
SELECT tp.PROFESSOR_NAME AS 교수이름 , ABS(100-SUBSTR(tp.PROFESSOR_SSN, 1, 2)) + SUBSTR(TO_CHAR(sysdate,'YYYY'),3,4) AS 나이
FROM TB_PROFESSOR tp
WHERE SUBSTR(tp.PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 나이 ;

--4
SELECT SUBSTR(tp.PROFESSOR_NAME, 2,3) AS 이름
FROM TB_PROFESSOR tp ;

--5
SELECT ts.STUDENT_NO , ts.STUDENT_NAME, 
EXTRACT (YEAR FROM ts.ENTRANCE_DATE) AS a,
1900+SUBSTR(ts.STUDENT_SSN,1,2) AS b,
to_number(EXTRACT (YEAR FROM ts.ENTRANCE_DATE)) - (1900+SUBSTR(ts.STUDENT_SSN,1,2))
FROM TB_STUDENT ts
WHERE (EXTRACT (YEAR FROM ts.ENTRANCE_DATE) - (1900+SUBSTR(ts.STUDENT_SSN,1,2)))>19 ;

--6
SELECT to_char(TO_DATE('20/12/25'),'day') AS "2020년 크리스마스 요일"
FROM dual ;

--7
SELECT TO_DATE('99/10/11', 'YY/MM/DD') , TO_DATE('49/10/11', 'YY/MM/DD')
FROM dual ;
--2099	2049

SELECT TO_DATE('99/10/11', 'RR/MM/DD') , TO_DATE('49/10/11', 'RR/MM/DD')
FROM dual ;
--1999	2049

--8
SELECT ts.STUDENT_NO, ts.STUDENT_NAME
FROM TB_STUDENT ts
WHERE EXTRACT (YEAR FROM ts.ENTRANCE_DATE)<2000 ;

--9
SELECT round(AVG(tg.POINT), 1)
FROM TB_STUDENT ts
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
WHERE ts.STUDENT_NAME = '한아름';

--10
SELECT  td.DEPARTMENT_NO AS 학과번호 , COUNT(*) AS "학생수(명)"
FROM TB_DEPARTMENT td 
JOIN  TB_STUDENT ts ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
GROUP BY td.DEPARTMENT_NO
ORDER BY td.DEPARTMENT_NO;

--11
SELECT  COUNT(*)
FROM TB_STUDENT ts 
WHERE ts.COACH_PROFESSOR_NO IS NULL;

--12
SELECT SUBSTR(tg.TERM_NO,1,4) AS "년도", round(avg(tg.POINT),1) AS "년도 별 평점"
FROM TB_STUDENT ts
JOIN TB_GRADE tg ON tg.STUDENT_NO = ts.STUDENT_NO
WHERE ts.STUDENT_NAME = '김고운'
GROUP BY SUBSTR( tg.TERM_NO ,1,4)
ORDER BY  SUBSTR( tg.TERM_NO ,1,4);


--13
--SELECT td.DEPARTMENT_NO, count(DECODE(ts.ABSENCE_YN,'Y',1))			--count 0도 count 대상임
SELECT td.DEPARTMENT_NO, sum(DECODE(ts.ABSENCE_YN,'Y',1,'N',0))		--sum NULL은 sum 해도 null
FROM TB_DEPARTMENT td, TB_STUDENT ts
WHERE td.DEPARTMENT_NO(+) = ts.DEPARTMENT_NO
GROUP BY td.DEPARTMENT_NO
ORDER BY td.DEPARTMENT_NO;


--14
SELECT ts.STUDENT_NAME AS 동일이름, COUNT (*) AS "동명인 수"
FROM TB_STUDENT ts
GROUP BY ts.STUDENT_NAME
HAVING count(*)>=2
ORDER BY ts.STUDENT_NAME;


--15
SELECT SUBSTR(tg.TERM_NO,1,4) AS "년도" , SUBSTR(tg.TERM_NO,5,6) AS "학기" , round(avg( tg.POINT),1)  AS "평점"
FROM TB_STUDENT ts
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
WHERE ts.STUDENT_NAME LIKE '김고운'
GROUP BY ROLLUP( SUBSTR(tg.TERM_NO,1,4) , SUBSTR(tg.TERM_NO,5,6) );




------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--1
SELECT ts.STUDENT_NAME AS "학생 이름" , ts.STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT ts
ORDER BY ts.STUDENT_NAME ;

--2
SELECT ts.STUDENT_NAME ,	ts.STUDENT_SSN
FROM TB_STUDENT ts
ORDER BY ts.STUDENT_SSN DESC;

--3
SELECT ts.STUDENT_NAME AS "학생이름"	,	ts.STUDENT_NO AS "학번"	,	ts.STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT ts 
WHERE
	ts.STUDENT_ADDRESS LIKE '강원도%' OR ts.STUDENT_ADDRESS LIKE '경기도%'	AND 
	ts.STUDENT_NO  NOT LIKE 'A%'
ORDER BY ts.STUDENT_NAME;

--4
SELECT tp.PROFESSOR_NAME, tp.PROFESSOR_SSN
FROM TB_PROFESSOR tp
JOIN TB_DEPARTMENT td ON tp.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME LIKE '법학과'
ORDER BY tp.PROFESSOR_SSN;

--5
SELECT ts.STUDENT_NO , tg.POINT
FROM TB_STUDENT ts 
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
ORDER BY tg.POINT DESC, ts.STUDENT_NO ASC;

--6
SELECT ts.STUDENT_NO , ts.STUDENT_NAME , td.DEPARTMENT_NAME 
FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
ORDER BY ts.STUDENT_NAME ;

--7
SELECT tc.CLASS_NAME , td.DEPARTMENT_NAME
FROM TB_CLASS tc 
JOIN TB_DEPARTMENT td ON tc.DEPARTMENT_NO = td.DEPARTMENT_NO ;

--8
SELECT tc.CLASS_NAME , tp.PROFESSOR_NAME
FROM TB_CLASS tc
JOIN TB_CLASS_PROFESSOR tcp ON tc.CLASS_NO = tcp.CLASS_NO
JOIN TB_PROFESSOR tp ON tcp.PROFESSOR_NO = tp.PROFESSOR_NO;

--9
SELECT tc.CLASS_NAME , tp.PROFESSOR_NAME , td.CATEGORY 
FROM TB_CLASS tc
JOIN TB_CLASS_PROFESSOR tcp ON tc.CLASS_NO = tcp.CLASS_NO
JOIN TB_PROFESSOR tp ON tcp.PROFESSOR_NO = tp.PROFESSOR_NO
JOIN TB_DEPARTMENT td ON tp.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.CATEGORY LIKE '인문사회';

--10
SELECT ts.STUDENT_NO , ts.STUDENT_NAME , ROUND(AVG(tg.POINT) , 1)
FROM TB_STUDENT ts 
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME LIKE '음악학과'
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME
ORDER BY ts.STUDENT_NO;

--11
SELECT td.DEPARTMENT_NAME AS "학과이름" , ts.STUDENT_NAME AS "학생이름" , tp.PROFESSOR_NAME AS "지도교수이름"
FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
JOIN TB_PROFESSOR tp ON ts.COACH_PROFESSOR_NO = tp.PROFESSOR_NO
WHERE ts.STUDENT_NO LIKE 'A313047';

--12
SELECT ts.STUDENT_NAME , tg.TERM_NO , tc.CLASS_NAME
FROM TB_STUDENT ts 
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
JOIN TB_CLASS tc ON tg.CLASS_NO = tc.CLASS_NO
WHERE tc.CLASS_NAME LIKE '인간관계론' AND
			substr(tg.TERM_NO , 1,4 ) LIKE '2007'
ORDER BY ts.STUDENT_NAME;

--13
SELECT tc.CLASS_NAME , td.DEPARTMENT_NAME , tcp.CLASS_NO , tcp.PROFESSOR_NO , td.CATEGORY
FROM TB_CLASS tc
LEFT JOIN TB_CLASS_PROFESSOR tcp  ON tcp.CLASS_NO = tc.CLASS_NO
LEFT JOIN TB_DEPARTMENT td ON tc.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.CATEGORY LIKE '예체능' AND tcp.PROFESSOR_NO IS NULL;


--14
SELECT ts.STUDENT_NAME AS "학생이름", NVL(tp.PROFESSOR_NAME,'지도교수 미지정') AS "지도교수"
FROM TB_STUDENT ts 
LEFT JOIN TB_PROFESSOR tp ON ts.COACH_PROFESSOR_NO = tp.PROFESSOR_NO
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME LIKE '서반아어학과'
ORDER BY ts.STUDENT_NO ASC;

--15
SELECT ts.STUDENT_NO AS "학번" , ts.STUDENT_NAME AS "이름" , td.DEPARTMENT_NAME AS "학과 이름" , AVG(tg.POINT) AS "평점"
FROM TB_STUDENT ts
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE ts.ABSENCE_YN LIKE 'N' 
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME, td.DEPARTMENT_NAME 
HAVING AVG(tg.POINT) >= 4.0
ORDER BY ts.STUDENT_NO;

--16
SELECT tc.CLASS_NO , tc.CLASS_NAME , AVG(tg.POINT)
FROM TB_CLASS tc
JOIN TB_GRADE tg ON tc.CLASS_NO = tg.CLASS_NO
JOIN TB_DEPARTMENT td ON tc.DEPARTMENT_NO = td.DEPARTMENT_NO
GROUP BY tc.CLASS_NO , tc.CLASS_NAME
ORDER BY tc.CLASS_NO ;

--17
--18
SELECT ts.STUDENT_NO, ts.STUDENT_NAME ,avg(tg.POINT)

FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
WHERE td.DEPARTMENT_NAME = '국어국문학과'
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME

ORDER BY avg(tg.POINT) DESC
FETCH FIRST 1 ROWS only;


--
SELECT ts.STUDENT_NO, ts.STUDENT_NAME ,round(avg(tg.POINT),1)

FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
WHERE td.DEPARTMENT_NAME = '국어국문학과'
GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME
HAVING avg(tg.point)=(
	SELECT MAX(AVG(tg.POINT))
	FROM TB_STUDENT ts 
	JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
	JOIN TB_GRADE tg ON ts.STUDENT_NO = tg.STUDENT_NO
	WHERE td.DEPARTMENT_NAME = '국어국문학과'
	GROUP BY ts.STUDENT_NO, ts.STUDENT_NAME
);


--19



/*
SELECT e.EMP_NAME, SUM(s.SALARY) AS total_salary

FROM EMPLOYEE e
JOIN SALARY s ON e.EMP_ID = s.EMP_ID
WHERE e.EMP_AGE > 30
GROUP BY e.EMP_NAME
HAVING SUM(s.SALARY) > 50000

ORDER BY total_salary DESC
FETCH FIRST 10 ROWS ONLY;
*/
