--wkc
/*
SELECT e.EMP_NAME, SUM(s.SALARY) AS total_salary

FROM EMPLOYEE e
JOIN SALARY s ON e.EMP_ID = s.EMP_ID
WHERE e.EMP_AGE > 30
GROUP BY e.EMP_NAME
HAVING SUM(s.SALARY) > 50000

ORDER BY total_salary DESC
FETCH FIRST 10 ROWS ONLY;
*/
--1
SELECT td.DEPARTMENT_NAME , td.CATEGORY
FROM TB_DEPARTMENT td;

--2
SELECT td.DEPARTMENT_NAME, '의 정원은'as" ", td.CAPACITY, '입니다'as" "
FROM TB_DEPARTMENT td;

--3
SELECT ts.STUDENT_NAME,td.DEPARTMENT_NAME
FROM TB_STUDENT ts
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME = '국어국문학과'
	AND ts.ABSENCE_YN = 'Y' 
	AND SUBSTR(ts.STUDENT_SSN, 8, 1) = '2' ;


--4 장기연체자
SELECT ts.STUDENT_NAME
FROM TB_STUDENT ts
WHERE ts.STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY ts.STUDENT_NAME DESC ;

--5 정원 20~30
SELECT td.DEPARTMENT_NAME , td.CATEGORY
FROM TB_DEPARTMENT td
WHERE td.CAPACITY BETWEEN 20 AND 30;

--6 총장 찾기
SELECT tp.PROFESSOR_NAME
FROM TB_PROFESSOR tp
WHERE tp.DEPARTMENT_NO IS null;

--7
SELECT ts.STUDENT_NAME, ts.DEPARTMENT_NO
FROM TB_STUDENT ts 
WHERE ts.DEPARTMENT_NO IS null;

--8
SELECT tc.CLASS_NO
FROM TB_CLASS tc 
WHERE tc.PREATTENDING_CLASS_NO IS NOT NULL ;

--9
SELECT DISTINCT td.CATEGORY
FROM TB_DEPARTMENT td ;

--10
SELECT ts.STUDENT_NO, ts.STUDENT_NAME, ts.STUDENT_SSN   , ts.ENTRANCE_DATE,ts.STUDENT_ADDRESS
FROM TB_STUDENT ts
WHERE TO_CHAR(ts.ENTRANCE_DATE, 'YYYY') LIKE '2002'
	AND ts.STUDENT_ADDRESS LIKE '전주%' ;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--1
SELECT ts.STUDENT_NO AS "학번" , ts.STUDENT_NAME AS "이름" , ts.ENTRANCE_DATE AS "입학년도"
FROM TB_STUDENT ts 
JOIN TB_DEPARTMENT td ON ts.DEPARTMENT_NO = td.DEPARTMENT_NO
WHERE td.DEPARTMENT_NAME = '영어영문학과'
ORDER BY ts.ENTRANCE_DATE ;

--2																			?
SELECT tp.PROFESSOR_NAME, tp.PROFESSOR_SSN
FROM TB_PROFESSOR tp
WHERE tp.PROFESSOR_NAME NOT LIKE '___' ;

--3
SELECT tp.PROFESSOR_NAME AS 교수이름 , ABS(100-SUBSTR(tp.PROFESSOR_SSN, 1, 2)) + SUBSTR(TO_CHAR(sysdate,'YYYY'),3,4) AS 나이
FROM TB_PROFESSOR tp
WHERE SUBSTR(tp.PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 나이 ;

--4
SELECT SUBSTR(tp.PROFESSOR_NAME, 2,3) AS 이름
FROM TB_PROFESSOR tp ;

--5
SELECT ts.STUDENT_NO , ts.STUDENT_NAME, EXTRACT (YEAR FROM ts.ENTRANCE_DATE) AS a,1900+SUBSTR(ts.STUDENT_SSN,1,2) AS b
, to_number(EXTRACT (YEAR FROM ts.ENTRANCE_DATE)) - 1900+SUBSTR(ts.STUDENT_SSN,1,2)
FROM TB_STUDENT ts
WHERE (EXTRACT (YEAR FROM ts.ENTRANCE_DATE) - 1900+SUBSTR(ts.STUDENT_SSN,1,2))>19 ;

--6
SELECT to_char(TO_DATE('20/12/25'),'day') AS "2020년 크리스마스 요일"
FROM dual ;

--7
SELECT TO_DATE('99/10/11', 'YY/MM/DD') , TO_DATE('49/10/11', 'YY/MM/DD')
FROM dual ;
--2099	2049

SELECT TO_DATE('99/10/11', 'RR/MM/DD') , TO_DATE('49/10/11', 'RR/MM/DD')
FROM dual ;
--1999	2049

--8
SELECT ts.STUDENT_NO, ts.STUDENT_NAME
FROM TB_STUDENT ts
WHERE EXTRACT (YEAR FROM ts.ENTRANCE_DATE)<2000 ;

--9
SELECT ts.
FROM TB_STUDENT ts ;





