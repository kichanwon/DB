


SELECT e.DEPT_CODE
FROM EMPLOYEE e 
WHERE e.EMP_NAME = '노옹철';


SELECT CEIL(AVG(e.SALARY))
FROM EMPLOYEE e ;

SELECT e.EMP_ID , e.EMP_NAME , e.JOB_CODE , e.SALARY
FROM EMPLOYEE e 
WHERE e.SALARY >= (
	SELECT CEIL(AVG(e.SALARY))
	FROM EMPLOYEE e
);

SELECT e.EMP_NAME , j.JOB_NAME , d.DEPT_TITLE , e.SALARY
FROM EMPLOYEE e 
JOIN JOB j USING (JOB_CODE)
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
WHERE e.SALARY > (
	SELECT AVG(e.SALARY)
	FROM EMPLOYEE e 
)
ORDER BY JOB_CODE;


SELECT e.EMP_ID , e. EMP_NAME , d.DEPT_TITLE , j.JOB_NAME , e.SALARY
FROM EMPLOYEE e 
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
LEFT JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
WHERE e.SALARY >= (
	SELECT e.SALARY
	FROM EMPLOYEE e
	WHERE e.EMP_NAME = '노옹철'
);

SELECT MAX(e.SALARY)
FROM EMPLOYEE e 
GROUP BY  e.DEPT_CODE;

SELECT e.EMP_NAME , e.JOB_CODE , e.DEPT_CODE , e.SALARY
FROM EMPLOYEE e 
WHERE e.SALARY  IN (
	SELECT MAX(e.SALARY)
	FROM EMPLOYEE e 
	GROUP BY e.DEPT_CODE
)
ORDER BY e.DEPT_CODE;


--1
SELECT  e.MANAGER_ID
FROM EMPLOYEE e 
WHERE e.MANAGER_ID IS NOT NULL;
--2
SELECT e.EMP_ID , e.EMP_NAME , d.DEPT_TITLE , j.JOB_NAME
FROM EMPLOYEE e 
JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
LEFT JOIN JOB j ON e.JOB_CODE = j.JOB_CODE;
--3
SELECT e.EMP_ID , e.EMP_NAME , d.DEPT_TITLE , j.JOB_NAME
FROM EMPLOYEE e 
JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
LEFT JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
WHERE e.EMP_ID IN (
	SELECT  e.MANAGER_ID
	FROM EMPLOYEE e 
	WHERE e.MANAGER_ID IS NOT NULL
);


SELECT e.EMP_ID , e.EMP_NAME , d.DEPT_TITLE , j.JOB_NAME , 
CASE WHEN e.EMP_ID IN (
	SELECT  DISTINCT e.MANAGER_ID
	FROM EMPLOYEE e 
	WHERE e.MANAGER_ID IS NOT NULL
) THEN '사수' ELSE '사원' END "구분"
FROM EMPLOYEE e 
JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
LEFT JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
ORDER BY e.EMP_ID;


SELECT e.EMP_ID , e.EMP_NAME , j.JOB_NAME , e.SALARY
FROM EMPLOYEE e 
JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
WHERE j.JOB_NAME = '대리' 
AND e.SALARY > ANY (
	SELECT e.SALARY 
	FROM EMPLOYEE e 
	JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
	WHERE j.JOB_NAME = '과장'
);


SELECT e.EMP_ID , e.EMP_NAME , j.JOB_NAME , e.SALARY
FROM EMPLOYEE e 
JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
WHERE j.JOB_NAME = '대리' 
AND e.SALARY >= (
	SELECT MIN(e.SALARY)
	FROM EMPLOYEE e 
	JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
	WHERE j.JOB_NAME = '과장'
);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


SELECT e.EMP_ID , e.EMP_NAME , j.JOB_NAME , e.SALARY
FROM EMPLOYEE e 
JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
WHERE j.JOB_NAME = '과장' 
AND e.SALARY > ALL (
	SELECT e.SALARY 
	FROM EMPLOYEE e 
	JOIN JOB j ON e.JOB_CODE =j.JOB_CODE
	WHERE j.JOB_NAME = '차장'
);


SELECT e.EMP_NAME , e.DEPT_CODE
FROM EMPLOYEE e 
WHERE e.DEPT_CODE IN (
	SELECT d.DEPT_ID 
	FROM DEPARTMENT d 
	WHERE d.LOCATION_ID = (
		SELECT l.LOCAL_CODE
		FROM LOCATION l 
		WHERE l.NATIONAL_CODE = 'KO'
	)
);

SELECT e.EMP_NAME , e.JOB_CODE 
FROM EMPLOYEE e 
WHERE e.DEPT_CODE =(
	SELECT e.DEPT_CODE
	FROM EMPLOYEE e
	WHERE e.ENT_YN = 'Y'
	AND SUBSTR(e.EMP_NO , 8, 1) = '2'
)
AND e.JOB_CODE  =(
	SELECT e.JOB_CODE
	FROM EMPLOYEE e
	WHERE e.ENT_YN = 'Y'
	AND SUBSTR(e.EMP_NO , 8, 1) IN ('2','4')
);


SELECT e.EMP_NAME , e.JOB_CODE 
FROM EMPLOYEE e 
WHERE (e.DEPT_CODE , e.JOB_CODE) =(
	SELECT e.DEPT_CODE , e.JOB_CODE
	FROM EMPLOYEE e
	WHERE e.ENT_YN = 'Y'
	AND SUBSTR(e.EMP_NO , 8, 1) = '2'
);

--1
SELECT e.EMP_ID, e.EMP_NAME, e.DEPT_CODE , e.JOB_CODE , d.DEPT_TITLE , j.JOB_NAME
FROM EMPLOYEE e
JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID 
JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
WHERE (e.DEPT_CODE, e.JOB_CODE) = (
	SELECT e.DEPT_CODE , e.JOB_CODE
	FROM EMPLOYEE e
	JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID 
	JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
	WHERE e.EMP_NAME = '노옹철'
)
AND e.EMP_NAME != '노옹철';

--2
SELECT e.EMP_ID, e.EMP_NAME, e.DEPT_CODE , e.JOB_CODE, e.HIRE_DATE
FROM EMPLOYEE e
WHERE (e.DEPT_CODE , e.JOB_CODE )=(
	SELECT e.DEPT_CODE , e.JOB_CODE
	FROM EMPLOYEE e
	WHERE EXTRACT(YEAR FROM e.HIRE_DATE) = '2000'
);


--3
SELECT e.EMP_ID, e.EMP_NAME, e.DEPT_CODE , e.MANAGER_ID , e.EMP_NO  , e.HIRE_DATE
FROM EMPLOYEE e
WHERE (e.DEPT_CODE , e.MANAGER_ID) =(
	SELECT e.DEPT_CODE , e.MANAGER_ID
	FROM EMPLOYEE e
	WHERE e.EMP_NO LIKE '77%' AND SUBSTR(e.EMP_NO ,8,1)='2'
--	WHERE SUBSTR(e.EMP_NO ,1,2)='77' AND SUBSTR(e.EMP_NO ,8,1)='2' 
);


SELECT e.EMP_ID , e.EMP_NAME , e.JOB_CODE , e.SALARY

FROM EMPLOYEE e 
WHERE (e.JOB_CODE , e.SALARY) in (
	SELECT e.JOB_CODE , trunc(AVG(e.SALARY),-4)
	FROM EMPLOYEE e 
	GROUP BY e.JOB_CODE
);

SELECT e.JOB_CODE , round(AVG(e.SALARY))
FROM EMPLOYEE e 
GROUP BY e.JOB_CODE;



CREATE VIEW temp AS SELECT * FROM EMPLOYEE;

SELECT e.EMP_ID , e.EMP_NAME , j.JOB_NAME , e.SALARY , e.JOB_CODE
FROM EMPLOYEE e 
--JOIN JOB j USING (job_code)
JOIN JOB j ON j.JOB_CODE = e.JOB_CODE
WHERE j.JOB_NAME = '대리' AND e.SALARY > ANY (
	SELECT e.SALARY
	FROM EMPLOYEE e 
	JOIN JOB j ON j.JOB_CODE = e.JOB_CODE
	WHERE j.JOB_NAME = '과장' 
);





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


SELECT e.EMP_NAME , e. JOB_CODE , e.SALARY 
FROM EMPLOYEE e
WHERE e.SALARY > (
	SELECT AVG(e1.SALARY)
	FROM EMPLOYEE e1
	WHERE e.JOB_CODE = e1.JOB_CODE
);


SELECT e.EMP_ID , e.EMP_NAME , d.DEPT_TITLE , e.MANAGER_ID
FROM EMPLOYEE e
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
WHERE e.MANAGER_ID = (
	SELECT e1.EMP_ID
	FROM EMPLOYEE e1
	WHERE e.MANAGER_ID = e1.EMP_ID
);



SELECT e.EMP_ID , e.EMP_NAME , e.DEPT_CODE , NVL(d.DEPT_TITLE, '-') , j.JOB_NAME , e.HIRE_DATE 
FROM EMPLOYEE e
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
JOIN JOB j USING (JOB_CODE)
WHERE e.ENT_YN ='N' AND e.HIRE_DATE in (
	SELECT MIN(e1.HIRE_DATE)
	FROM EMPLOYEE e1
	WHERE e.DEPT_CODE = e1.DEPT_CODE
)
ORDER BY e.HIRE_DATE;

SELECT e.EMP_ID , e.EMP_NAME , e.DEPT_CODE , NVL(d.DEPT_TITLE, '-') , j.JOB_NAME , e.HIRE_DATE 
FROM EMPLOYEE e
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
JOIN JOB j USING (JOB_CODE)
WHERE e.HIRE_DATE in (
	SELECT MIN(e1.HIRE_DATE)
	FROM EMPLOYEE e1
	WHERE e.DEPT_CODE = e1.DEPT_CODE AND e1.ENT_YN ='N' OR (e1.DEPT_CODE IS NULL AND e.DEPT_CODE IS NULL)
)
ORDER BY e.HIRE_DATE;



SELECT e.EMP_ID , e.EMP_NAME , e.MANAGER_ID , NVL(e1.EMP_NAME , '없음')
FROM EMPLOYEE e
LEFT JOIN EMPLOYEE e1 ON e.MANAGER_ID = e1.EMP_ID ;


SELECT e.EMP_ID , e.EMP_NAME , e.MANAGER_ID , 
nvl(	
(	SELECT e1.EMP_NAME 
	FROM EMPLOYEE e1
	WHERE e.MANAGER_ID = e1.EMP_NO 
),'없음')
FROM EMPLOYEE e;

---------------------------------------------------------------------

SELECT *
FROM (
	SELECT e.EMP_NAME 이름, d.DEPT_TITLE 부서
	FROM EMPLOYEE e
	JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
)
WHERE 부서 = '기술지원부';


SELECT rownum, 이름, 급여
FROM (
	SELECT e.EMP_NAME 이름, e.SALARY 급여
	FROM EMPLOYEE e
	ORDER BY e.SALARY DESC
)
WHERE rownum <= 5;

--SELECT rownum, DEPT_CODE , DEPT_TITLE , trunc(급여)
SELECT rownum, emp.dept_code , emp.dept_title , emp.급여
FROM (
	SELECT e.DEPT_CODE , d.DEPT_TITLE , AVG(e.SALARY ) 급여
	FROM EMPLOYEE e 
	LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
	GROUP BY e.DEPT_CODE , d.DEPT_TITLE
	ORDER BY 급여 DESC
) emp
WHERE rownum <=3;


WITH TOP_SAL AS (
	SELECT e.EMP_NAME , e.SALARY
	FROM EMPLOYEE e 
	ORDER BY e.SALARY
)
SELECT rownum , emp_name, salary
FROM TOP_SAL
WHERE rownum <= 10;


SELECT rownum , emp_name, salary
FROM (
	SELECT e.EMP_NAME , e.SALARY
	FROM EMPLOYEE e 
	ORDER BY e.SALARY
)
WHERE rownum <= 10;

SELECT  emp_name, salary
FROM (
	SELECT e.EMP_NAME , e.SALARY
	FROM EMPLOYEE e 
	ORDER BY e.SALARY
)


FETCH FIRST 10 ROWS ONLY ;



SELECT RANK() OVER (ORDER BY salary DESC) 순위, e.EMP_NAME, e.SALARY
FROM EMPLOYEE e ;

SELECT dense_RANK() OVER (ORDER BY salary DESC) 순위, e.EMP_NAME, e.SALARY
FROM EMPLOYEE e ;



--1
SELECT e.EMP_ID , e.EMP_NAME , e.PHONE , e.HIRE_DATE
FROM EMPLOYEE e 
WHERE e.DEPT_CODE = (
	SELECT e1.DEPT_CODE
	FROM EMPLOYEE e1
	WHERE e1.EMP_NAME = '전지연'
)
AND e.EMP_NAME != '전지연';

--2
SELECT  e.EMP_ID , e.EMP_NAME , e.PHONE , e.SALARY , j.JOB_NAME , e.HIRE_DATE
FROM EMPLOYEE e 
LEFT JOIN JOB j USING (JOB_CODE)
WHERE e.SALARY = (
	SELECT MAX(e1.SALARY)
	FROM EMPLOYEE e1
	WHERE SUBSTR(e1.HIRE_DATE, 1, 4) <= '2000' 
);


--3
SELECT e.EMP_ID , e.EMP_NAME , e.PHONE , e.HIRE_DATE
FROM EMPLOYEE e 
WHERE (e.DEPT_CODE , e.JOB_CODE ) in (
	SELECT e1.DEPT_CODE , e1.JOB_CODE 
	FROM EMPLOYEE e1
	WHERE e1.EMP_NAME = '노옹철'
)
AND e.EMP_NAME != '노옹철';

--4
SELECT  e.EMP_ID , e.EMP_NAME , e.DEPT_CODE , e.JOB_CODE , e.HIRE_DATE
FROM EMPLOYEE e 
WHERE (e.DEPT_CODE , e.JOB_CODE) IN (
	SELECT e.DEPT_CODE , e.JOB_CODE
	FROM EMPLOYEE e
	WHERE EXTRACT (YEAR FROM e.HIRE_DATE) LIKE '2000%'
);


--5
SELECT  e.EMP_ID , e.EMP_NAME , e.DEPT_CODE , e.MANAGER_ID , e.EMP_NO , e.HIRE_DATE
FROM EMPLOYEE e
WHERE (e.DEPT_CODE , e.MANAGER_ID) IN (
	SELECT e1.DEPT_CODE , e1.EMP_ID
	FROM EMPLOYEE e1 
	WHERE e.EMP_NO LIKE '77%'
	AND e.MANAGER_ID = e1.EMP_ID
);
SELECT  e.EMP_ID , e.EMP_NAME , e.DEPT_CODE , e.MANAGER_ID , e.EMP_NO , e.HIRE_DATE
FROM EMPLOYEE e
WHERE e.EMP_NAME ='차태연';


--6
SELECT e.EMP_ID , e.EMP_NAME , d.DEPT_TITLE , j.JOB_NAME , e.HIRE_DATE
FROM EMPLOYEE e 
LEFT JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID 
LEFT JOIN JOB j USING (JOB_CODE)
WHERE e.ENT_YN = 'N'
ORDER BY e.HIRE_DATE ASC;


--7
--1
SELECT e.EMP_ID, e.EMP_NAME, j.JOB_NAME,
       EXTRACT(YEAR FROM SYSDATE) - 
       EXTRACT(YEAR FROM TO_DATE(SUBSTR(e.EMP_NO, 1, 2), 'RR')) AS "나이"
       ,
       TRUNC(decode(e.bonus,NULL, e.SALARY, e.salary*(1+e.BONUS)*12) ) AS "보너스 포함 연봉"
FROM EMPLOYEE e 
JOIN JOB j USING (JOB_CODE)
WHERE (e.DEPT_CODE) in (
	SELECT e1.DEPT_CODE 
	FROM EMPLOYEE e1
	GROUP BY e1.DEPT_CODE
);

--2
SELECT e.EMP_ID, e.EMP_NAME, j.JOB_NAME, 
CEIL(MONTHS_BETWEEN (SYSDATE, TO_DATE(SUBSTR(e.EMP_NO, 1, 6), 'RRMMDD')) / 12) "나이",
--EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(e.EMP_NO, 1, 2), 'RR')) AS "나이",
TO_CHAR( (1 + NVL(e.BONUS ,0)) * SALARY * 12 , 'L999,999,999') AS "보너스 포함 연봉"
--TRUNC(decode(e.bonus,NULL, e.SALARY, e.salary*(1+e.BONUS)*12) ) AS "보너스 포함 연봉"
FROM EMPLOYEE e
LEFT JOIN JOB j USING(JOB_CODE) 
WHERE 
(JOB_CODE, FLOOR(MONTHS_BETWEEN (SYSDATE, TO_DATE(SUBSTR(e.EMP_NO, 1, 6), 'RRMMDD')) / 12) ) IN  
(
	SELECT JOB_CODE, MIN(FLOOR(MONTHS_BETWEEN (SYSDATE, TO_DATE(SUBSTR(e.EMP_NO, 1, 6), 'RRMMDD')) / 12))
	FROM EMPLOYEE e  GROUP BY JOB_CODE
);

--final
SELECT e.EMP_ID, e.EMP_NAME, j.JOB_NAME, 
FLOOR(MONTHS_BETWEEN (SYSDATE, TO_DATE(SUBSTR(e.EMP_NO, 1, 6), 'RRMMDD')) / 12) AS "나이",
TO_CHAR((1 + NVL(e.BONUS, 0)) * e.SALARY * 12, 'L999,999,999') AS "보너스 포함 연봉"
FROM EMPLOYEE e
LEFT JOIN JOB j USING (JOB_CODE) 
WHERE 
(JOB_CODE, FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(e.EMP_NO, 1, 6), 'RRMMDD')) / 12)) IN  
(
	SELECT JOB_CODE, MIN(FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(e1.EMP_NO, 1, 6), 'RRMMDD')) / 12))
	FROM EMPLOYEE e1  
	GROUP BY JOB_CODE
);
